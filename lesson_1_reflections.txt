How did viewing a diff between two versions of a file help you see the bug that 
was introduced?

Using diff, the lines that were changed in the new version were
easily found which resulted in pinpointing the bug 
and fixing it


How could having easy access to the entire history of a file make you a more 
efficient programmer in the long term?

Having easy access to history of the file makes learning from mistakes and preventing them from happening in the 
future easier.


What do you think are the pros and cons of manually choosing when to create a 
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Manually saving commits gives us control on when we finish a particular task. Thus a short history of 
commits can be made. Automatic saving can clutter the history with a large list of changes for no reason

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

In large projects, multiple files work together e.g. HTML and CSS files go hand in hand for websites. 
Thus accessing changes across these files in a single commit is useful in tracking bugs etc. 


How can you use the commands git log and git diff to view the history of files?

 git log shows a list of commits made in the project. git diff shows the difference between 2 commits


How might using version control make you more confident to make changes that
could break something?

Having made sure that I have a backup of everything in perfect working condition, I can make changes
to code more confidently, without having the fear of breaking something


Now that you have your workspace set up, what do you want to try using Git for?

   

 Fill in your answer here
